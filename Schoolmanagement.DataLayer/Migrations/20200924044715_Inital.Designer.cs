// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Schoolmanagement.DataLayer;

namespace Schoolmanagement.DataLayer.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    [Migration("20200924044715_Inital")]
    partial class Inital
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Schoolmanagement.Entities.BookBorrow", b =>
                {
                    b.Property<int>("BorrowId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FromDate");

                    b.Property<bool>("Status");

                    b.Property<DateTime>("Todate");

                    b.HasKey("BorrowId");

                    b.ToTable("BookBorrows");
                });

            modelBuilder.Entity("Schoolmanagement.Entities.Library", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookName");

                    b.Property<string>("Publication");

                    b.Property<int>("Stock");

                    b.Property<string>("Writer");

                    b.HasKey("BookId");

                    b.ToTable("Libraries");
                });

            modelBuilder.Entity("Schoolmanagement.Entities.Notice", b =>
                {
                    b.Property<int>("NoticeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChiefGuest");

                    b.Property<string>("Event");

                    b.Property<string>("Name");

                    b.Property<DateTime>("NoticeDate");

                    b.Property<string>("Remarks");

                    b.Property<int>("classList");

                    b.HasKey("NoticeId");

                    b.ToTable("Notices");
                });

            modelBuilder.Entity("Schoolmanagement.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassList");

                    b.Property<DateTime>("DOB");

                    b.Property<string>("FatherName");

                    b.Property<string>("Name");

                    b.Property<long>("Phone");

                    b.Property<string>("Section");

                    b.HasKey("StudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Schoolmanagement.Entities.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<int>("Experience");

                    b.Property<string>("Name");

                    b.Property<long>("PhoneNumber");

                    b.Property<string>("Remark");

                    b.Property<string>("Subject");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");
                });
#pragma warning restore 612, 618
        }
    }
}
